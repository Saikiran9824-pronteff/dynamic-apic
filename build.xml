<project name="apic-cicd" default="ci" basedir=".">

  <!-- ================== PROPERTIES ================== -->
  <!-- These can be overridden from Jenkins parameters -->
  <property name="API_FOLDER" value="ekyc"/>          <!-- category folder -->
  <property name="API_NAME" value="ekyc-biometric"/>  <!-- actual API name -->
  <property name="API_VERSION" value="1.0.0"/>

  <property name="PRODUCT_FOLDER" value="ekyc"/>      <!-- product folder -->
  <property name="PRODUCT_NAME" value="ekyc"/>        <!-- product name -->
  <property name="CATALOG_NAME" value="prod"/>

  <!-- ================== LOGIN ================== -->
  <target name="login">
    <echo message="🔐 Logging in to API Connect..."/>
    <exec executable="apic" failonerror="true">
      <arg value="login"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--username"/>
      <arg value="umesh"/>
      <arg value="--password"/>
      <arg value="!n0r1t5@C"/>
      <arg value="--realm"/>
      <arg value="provider/default-idp-2"/>
    </exec>
  </target>

  <!-- ================== VALIDATE API ================== -->
  <target name="validate" depends="login">
    <echo message="✅ Validating API YAML for ${API_NAME}_${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="validate"/>
      <arg value="${basedir}/apis/${API_FOLDER}/${API_NAME}_${API_VERSION}.yaml"/>
    </exec>
  </target>

  <!-- ================== CHECK API ================== -->
  <target name="api-check" depends="validate">
    <echo message="🔎 Checking if API exists..."/>
    <exec executable="apic" failonerror="false" outputproperty="api.exists">
      <arg value="draft-apis:get"/>
      <arg value="${API_NAME}:${API_VERSION}"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
    <echo message="API exists? ${api.exists}"/>
  </target>

  <!-- ================== BACKUP ================== -->
  <target name="backup">
    <echo message="📦 Backing up API &amp; Product YAMLs with timestamp..."/>
    <tstamp>
      <format property="backup.timestamp" pattern="yyyyMMdd_HHmmss"/>
    </tstamp>

    <!-- Backup API -->
    <mkdir dir="${basedir}/apis/${API_FOLDER}/API_BACKUP"/>
    <copy file="${basedir}/apis/${API_FOLDER}/${API_NAME}_${API_VERSION}.yaml"
          tofile="${basedir}/apis/${API_FOLDER}/API_BACKUP/${API_NAME}_${API_VERSION}_${backup.timestamp}.yaml"
          overwrite="false"/>

    <!-- Backup Product -->
    <mkdir dir="${basedir}/products/${PRODUCT_FOLDER}/PRODUCT_BACKUP"/>
    <copy file="${basedir}/products/${PRODUCT_FOLDER}/${PRODUCT_NAME}_${API_VERSION}.yaml"
          tofile="${basedir}/products/${PRODUCT_FOLDER}/PRODUCT_BACKUP/${PRODUCT_NAME}_${API_VERSION}_${backup.timestamp}.yaml"
          overwrite="false"/>

    <echo message="✅ Backup created: ${backup.timestamp}"/>
  </target>

  <!-- ================== PROCESS API ================== -->
  <target name="api-process" depends="api-check">
    <condition property="api.exists.true">
      <and>
        <isset property="api.exists"/>
        <matches string="${api.exists}" pattern=".*${API_NAME}:${API_VERSION}.*"/>
      </and>
    </condition>
    <antcall target="api-update"/>
    <antcall target="api-create"/>
  </target>

  <target name="api-create" unless="api.exists.true">
    <echo message="🆕 Creating new draft API ${API_NAME}:${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="draft-apis:create"/>
      <arg value="${basedir}/apis/${API_FOLDER}/${API_NAME}_${API_VERSION}.yaml"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
  </target>

  <target name="api-update" if="api.exists.true">
    <echo message="♻️ Updating existing draft API ${API_NAME}:${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="draft-apis:update"/>
      <arg line="${API_NAME}:${API_VERSION} ${basedir}/apis/${API_FOLDER}/${API_NAME}_${API_VERSION}.yaml"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
  </target>

  <!-- ================== FIX PRODUCT API REFS ================== -->
  <target name="fix-refs" depends="api-process">
    <echo message="🔧 Fixing API references in product YAML..."/>
    <exec executable="bash" failonerror="true">
      <arg value="/var/lib/jenkins/scripts/fix-refs.sh"/>
      <arg value="${basedir}/products/${PRODUCT_FOLDER}"/>
      <arg value="${basedir}/apis"/>
    </exec>
  </target>

  <!-- ================== CHECK PRODUCT ================== -->
  <target name="product-check" depends="fix-refs">
    <echo message="🔎 Checking if Product exists..."/>
    <exec executable="apic" failonerror="false" outputproperty="product.exists">
      <arg value="draft-products:get"/>
      <arg value="${PRODUCT_NAME}:${API_VERSION}"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
    <echo message="Product exists? ${product.exists}"/>
  </target>

  <!-- ================== PROCESS PRODUCT ================== -->
  <target name="product-process" depends="product-check">
    <condition property="product.exists.true">
      <and>
        <isset property="product.exists"/>
        <matches string="${product.exists}" pattern=".*${PRODUCT_NAME}:${API_VERSION}.*"/>
      </and>
    </condition>
    <antcall target="product-update"/>
    <antcall target="product-create"/>
  </target>

  <target name="product-create" unless="product.exists.true">
    <echo message="🆕 Creating new draft Product ${PRODUCT_NAME}:${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="draft-products:create"/>
      <arg value="${basedir}/products/${PRODUCT_FOLDER}/${PRODUCT_NAME}_${API_VERSION}.yaml"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
  </target>

  <target name="product-update" if="product.exists.true">
    <echo message="♻️ Updating existing draft Product ${PRODUCT_NAME}:${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="draft-products:update"/>
      <arg line="${PRODUCT_NAME}:${API_VERSION} ${basedir}/products/${PRODUCT_FOLDER}/${PRODUCT_NAME}_${API_VERSION}.yaml"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
  </target>

  <!-- ================== APPROVAL GATE ================== -->
  <target name="approval-gate" depends="product-process">
    <echo message="⏸ Waiting for approval to publish the product..."/>
  </target>

  <!-- ================== PUBLISH PRODUCT ================== -->
  <target name="publish">
    <echo message="🚀 Publishing Product ${PRODUCT_NAME}_${API_VERSION}.yaml to catalog ${CATALOG_NAME}"/>
    <exec executable="apic" failonerror="true">
      <arg value="products:publish"/>
      <arg value="${basedir}/products/${PRODUCT_FOLDER}/${PRODUCT_NAME}_${API_VERSION}.yaml"/>
      <arg value="--scope"/>
      <arg value="catalog"/>
      <arg value="--catalog"/>
      <arg value="${CATALOG_NAME}"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>

    <!-- 🔹 Run backup only after publish succeeds -->
    <antcall target="backup"/>

    <!-- 🎉 Success only after publish -->
    <echo message="🎉 CI/CD pipeline completed successfully!"/>
  </target>

  <!-- ================== CI PIPELINE ================== -->
  <target name="ci" depends="approval-gate"/>
</project>
